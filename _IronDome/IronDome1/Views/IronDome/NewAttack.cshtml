@model IronDome.ViewModels.AttackViewModel

@{
    ViewData["Title"] = "New Attack";
}

<h1>NewAttack</h1>

<h4>Attack</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateAttack">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Attack.Count" class="control-label"></label>
                <input type="number" asp-for="Attack.Count" class="form-control"></input>
                <span asp-validation-for="Attack.Count" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Attack.TypeId" class="control-label"></label>
                <select asp-for="Attack.TypeId" asp-items="Model.TypeSelectListItems" class="form-control"></select>
                <span asp-validation-for="Attack.TypeId" class="text-danger"></span>
            </div>
            <div class="form-group">               
                <label asp-for="Attack.OriginId" class="control-label"></label>
                <select asp-for="Attack.OriginId" asp-items="Model.OriginSelectListItems" class="form-control"></select>
                <span asp-validation-for="Attack.OriginId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ManageAttacks">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
